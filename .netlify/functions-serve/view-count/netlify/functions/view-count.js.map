{
  "version": 3,
  "sources": ["../../../../OneDrive/Desktop/Portfolio/netlify/functions/view-count.js"],
  "sourceRoot": "C:/Users/rajpr/AppData/Local/Temp/tmp-8876-x792Lhn6y72V",
  "sourcesContent": ["import fs from 'fs';\r\nimport path from 'path';\r\n\r\n// Common CORS headers\r\nconst corsHeaders = {\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Headers': 'Content-Type',\r\n  'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n};\r\n\r\nexport const handler = async function(event, context) {\r\n  // Handle CORS preflight\r\n  if (event.httpMethod === 'OPTIONS') {\r\n    return {\r\n      statusCode: 200,\r\n      headers: corsHeaders,\r\n      body: 'OK',\r\n    };\r\n  }\r\n\r\n  // Path to the view count JSON file\r\n  // For Netlify deployment, we need to use a different path structure\r\n  let viewCountFilePath;\r\n  \r\n  if (process.env.NETLIFY) {\r\n    // Running on Netlify - use the dist/server directory\r\n    viewCountFilePath = path.join(process.cwd(), 'dist', 'server', 'viewCount.json');\r\n  } else {\r\n    // Running locally with Netlify CLI - use the server directory\r\n    viewCountFilePath = path.join(process.cwd(), 'server', 'viewCount.json');\r\n  }\r\n\r\n  try {\r\n    if (event.httpMethod === 'GET') {\r\n      // Read and return the current view count\r\n      const data = fs.readFileSync(viewCountFilePath, 'utf8');\r\n      const viewCount = JSON.parse(data);\r\n      \r\n      return {\r\n        statusCode: 200,\r\n        headers: corsHeaders,\r\n        body: JSON.stringify(viewCount),\r\n      };\r\n    } else if (event.httpMethod === 'POST') {\r\n      // Increment the view count\r\n      const data = fs.readFileSync(viewCountFilePath, 'utf8');\r\n      const viewCount = JSON.parse(data);\r\n      viewCount.totalViews += 1;\r\n      viewCount.lastUpdated = new Date().toISOString();\r\n\r\n      fs.writeFileSync(viewCountFilePath, JSON.stringify(viewCount, null, 2));\r\n\r\n      return {\r\n        statusCode: 200,\r\n        headers: corsHeaders,\r\n        body: JSON.stringify({ success: true, totalViews: viewCount.totalViews }),\r\n      };\r\n    } else {\r\n      return {\r\n        statusCode: 405,\r\n        headers: corsHeaders,\r\n        body: JSON.stringify({ message: 'Method Not Allowed' }),\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error('Error handling view count:', error);\r\n    return {\r\n      statusCode: 500,\r\n      headers: corsHeaders,\r\n      body: JSON.stringify({ \r\n        success: false, \r\n        message: 'Error handling view count',\r\n        error: process.env.NODE_ENV === 'development' ? error.message : undefined\r\n      }),\r\n    };\r\n  }\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAe;AACf,kBAAiB;AAGjB,IAAM,cAAc;AAAA,EAClB,+BAA+B;AAAA,EAC/B,gCAAgC;AAAA,EAChC,gCAAgC;AAClC;AAEO,IAAM,UAAU,eAAe,OAAO,SAAS;AAEpD,MAAI,MAAM,eAAe,WAAW;AAClC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,IACR;AAAA,EACF;AAIA,MAAI;AAEJ,MAAI,QAAQ,IAAI,SAAS;AAEvB,wBAAoB,YAAAA,QAAK,KAAK,QAAQ,IAAI,GAAG,QAAQ,UAAU,gBAAgB;AAAA,EACjF,OAAO;AAEL,wBAAoB,YAAAA,QAAK,KAAK,QAAQ,IAAI,GAAG,UAAU,gBAAgB;AAAA,EACzE;AAEA,MAAI;AACF,QAAI,MAAM,eAAe,OAAO;AAE9B,YAAM,OAAO,UAAAC,QAAG,aAAa,mBAAmB,MAAM;AACtD,YAAM,YAAY,KAAK,MAAM,IAAI;AAEjC,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,MAAM,KAAK,UAAU,SAAS;AAAA,MAChC;AAAA,IACF,WAAW,MAAM,eAAe,QAAQ;AAEtC,YAAM,OAAO,UAAAA,QAAG,aAAa,mBAAmB,MAAM;AACtD,YAAM,YAAY,KAAK,MAAM,IAAI;AACjC,gBAAU,cAAc;AACxB,gBAAU,eAAc,oBAAI,KAAK,GAAE,YAAY;AAE/C,gBAAAA,QAAG,cAAc,mBAAmB,KAAK,UAAU,WAAW,MAAM,CAAC,CAAC;AAEtE,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,MAAM,KAAK,UAAU,EAAE,SAAS,MAAM,YAAY,UAAU,WAAW,CAAC;AAAA,MAC1E;AAAA,IACF,OAAO;AACL,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,MAAM,KAAK,UAAU,EAAE,SAAS,qBAAqB,CAAC;AAAA,MACxD;AAAA,IACF;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,8BAA8B,KAAK;AACjD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,MAAM,KAAK,UAAU;AAAA,QACnB,SAAS;AAAA,QACT,SAAS;AAAA,QACT,OAAO,QAAQ,IAAI,aAAa,gBAAgB,MAAM,UAAU;AAAA,MAClE,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": ["path", "fs"]
}
